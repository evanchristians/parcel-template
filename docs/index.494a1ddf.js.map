{"mappings":"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","sources":["src/utils/constants.js","src/utils/useIntersectionObserver.js","src/utils/usePrimitiveSPRouter.js","src/utils/useMenuToggle.js","src/index.js","src/utils/submitContactForm.js","src/utils/sendMail.js"],"sourcesContent":["export const ADMIN_EMAIL = \"evanryk@gmail.com\";\n","const callback = (entries) => {\n    entries.forEach((entry) => {\n        if (entry.isIntersecting) {\n            entry.target.classList.add(\"is-intersecting\");\n        } else {\n            entry.target.classList.remove(\"is-intersecting\");\n        }\n    });\n};\n\nconst observer = new IntersectionObserver(callback, {\n    root: document.querySelector(\"body\"),\n    threshold: 1.0,\n});\n\nconst observables = document.querySelectorAll(\"[data-scroll]\");\n\nexport const useIntersectionObserver = () => {\n    observables.forEach((observable) => observer.observe(observable));\n};\n","const pageLinks = document.querySelectorAll(\"[data-page-link]\");\nconst pages = document.querySelectorAll(\"[data-page]\");\n\nexport const usePrimitiveSPRouter = () => {\n    pageLinks.forEach((pageLink) => {\n        pageLink.addEventListener(\"click\", (event) => {\n            event.preventDefault();\n\n            pageLinks.forEach((pageLink) =>\n                pageLink.classList.remove(\"active\")\n            );\n\n            const targetLinks = document.querySelectorAll(\n                `[data-target='${pageLink.dataset.target}']`\n            );\n\n            targetLinks.forEach((targetLink) => {\n                targetLink.classList.add(\"active\");\n            });\n\n            pages.forEach((page) => page.classList.remove(\"active\"));\n\n            document\n                .getElementById(pageLink.dataset.target)\n                .classList.add(\"active\");\n        });\n    });\n};\n","export const useMenuToggle = () => {\n    let isOpen = false;\n\n    const toggle = document.querySelector(\"[data-menu-toggle]\");\n    const menu = document.querySelector(\"[data-menu]\");\n    const menuOverlay = document.getElementById(\"menu-overlay\");\n    const logo = document.querySelector(\".logo\");\n\n    const toggleElements = [toggle, menu, menuOverlay, logo];\n\n    const mobileLinks = document.querySelectorAll(\"[data-mobile-page-link]\");\n\n    const handleToggle = () => {\n        isOpen = !isOpen;\n\n        if (isOpen) {\n            toggleElements.forEach((toggleElement) => {\n                toggleElement.setAttribute(\"data-open\", \"\");\n            });\n        } else {\n            toggleElements.forEach((toggleElement) => {\n                toggleElement.removeAttribute(\"data-open\");\n            });\n        }\n\n        mobileLinks.forEach((mobileLink, key) => {\n            if (isOpen) {\n                mobileLink.style.transitionDuration = \".75s\";\n                mobileLink.style.transitionDelay = key * 200 + 100 + \"ms\";\n            } else {\n                mobileLink.style.transitionDuration = \".5s\";\n                mobileLink.style.transitionDelay = \"0s, .5s\";\n            }\n        });\n    };\n\n    toggle.addEventListener(\"click\", handleToggle);\n\n    mobileLinks.forEach((mobileLink) => {\n        mobileLink.addEventListener(\"click\", handleToggle);\n    });\n};\n","import { submitContactForm } from \"./utils/submitContactForm\";\nimport { useIntersectionObserver } from \"./utils/useIntersectionObserver\";\nimport { usePrimitiveSPRouter } from \"./utils/usePrimitiveSPRouter\";\nimport { useMenuToggle } from \"./utils/useMenuToggle\";\n\nif (module.hot) {\n    module.hot.accept();\n}\n\nuseIntersectionObserver();\nusePrimitiveSPRouter();\nuseMenuToggle();\n\ndocument\n    .getElementById(\"contact-form\")\n    .addEventListener(\"submit\", submitContactForm);\n","import { sendMail } from \"./sendMail\";\n\nconst validate = (formProps) => {\n    let errors = [];\n\n    if (formProps.name.length == 0) {\n        errors.push({\n            field: \"name\",\n            message: \"This field is required\",\n        });\n    }\n\n    if (formProps.phone.length == 0) {\n        errors.push({\n            field: \"phone\",\n            message: \"This field is required\",\n        });\n    } else if (\n        !formProps.phone\n            .replace(/[^\\w\\s]/gi, \"\")\n            .replace(\" \", \"\")\n            .match(/^[0-9]{10}$/)\n    ) {\n        errors.push({\n            field: \"phone\",\n            message: \"This phone number is invalid\",\n        });\n    }\n\n    if (formProps.message.length == 0) {\n        errors.push({\n            field: \"message\",\n            message: \"This field is required\",\n        });\n    }\n\n    if (formProps.email.length == 0) {\n        errors.push({\n            field: \"email\",\n            message: \"This field is required\",\n        });\n    } else if (!formProps.email.match(/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/)) {\n        errors.push({\n            field: \"email\",\n            message: \"This email address is invalid\",\n        });\n    }\n\n    if (errors.length > 0)\n        return {\n            errors,\n            success: false,\n        };\n\n    return {\n        success: true,\n    };\n};\n\nconst clearErrors = (formProps) => {\n    for (const [key, prop] of Object.entries(formProps)) {\n        const errorField = document.getElementById(`${key}-error`);\n        if (errorField) errorField.innerText = \"\";\n    }\n\n    document.getElementById(\"form-success\").innerText = \"\";\n};\n\nexport const submitContactForm = async (event) => {\n    event.preventDefault();\n    const formData = new FormData(document.getElementById(\"contact-form\"));\n    const formProps = Object.fromEntries(formData);\n\n    const { success, errors } = validate(formProps);\n\n    clearErrors(formProps);\n\n    if (errors) {\n        errors.forEach((error) => {\n            const errorField = document.getElementById(`${error.field}-error`);\n            errorField.innerText = error.message;\n        });\n    }\n\n    if (success) {\n        const submitButton = document.getElementById(\n            \"contact-form-submit-button\"\n        );\n\n        submitButton.disabled = true;\n\n        const mailResponse = await sendMail(formProps);\n\n        if (mailResponse.success) {\n            submitButton.classList.add(\"success\");\n            submitButton.innerText = \"Sent!\";\n            document.getElementById(\"form-success\").innerText =\n                \"Your message has been sent. Thanks for contacting us!\";\n        }\n    } else {\n        document.getElementById(\"form-success\").innerText = \"\";\n    }\n};\n","import { ADMIN_EMAIL } from \"./constants\";\n\nexport const sendMail = async (props) => {\n    try {\n        const response = await fetch(\n            `https://formsubmit.co/ajax/${ADMIN_EMAIL}`,\n            {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    Accept: \"application/json\",\n                },\n                body: JSON.stringify(props),\n            }\n        );\n\n        const data = await response.json();\n\n        return { success: data.success };\n    } catch (error) {\n        return { error };\n    }\n};\n"],"names":["$c0f4a693c4206cf9$var$observer","IntersectionObserver","entries","forEach","entry","isIntersecting","target","classList","add","remove","root","document","querySelector","threshold","$c0f4a693c4206cf9$var$observables","querySelectorAll","$295aec03f9ef1b59$var$pageLinks","$295aec03f9ef1b59$var$pages","observable","observe","pageLink","addEventListener","event","preventDefault","pageLink1","dataset","targetLink","page","getElementById","isOpen","toggle","toggleElements","mobileLinks","handleToggle","toggleElement","setAttribute","removeAttribute","mobileLink","key","style","transitionDuration","transitionDelay","$6d86899fa8e97754$export$3f64d3339bad7539","async","formData","FormData","formProps","Object","fromEntries","success","errors","name","length","push","field","message","phone","replace","match","email","$d4fe0f8c8fd24104$var$validate","prop","errorField","innerText","$d4fe0f8c8fd24104$var$clearErrors","error","submitButton","disabled","props","response","fetch","method","headers","Accept","body","JSON","stringify","json","$b26a20d2dcce3c11$export$ea6193c7ac0a3499"],"version":3,"file":"index.494a1ddf.js.map"}